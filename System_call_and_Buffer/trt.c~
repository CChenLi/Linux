#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>

int main(int argc, const char * argv[]) {
    
    // Number of arguments error checking 
    if (argc > 3){
        fprintf(stderr, "ERROR: More than two operands, need from and to\n");
        exit(1);
    }

    if (argc < 3){
        fprintf(stderr, "ERROR: Less than two operands, need from and to\n");
        exit(1);
    }
    
    const char* from;
    const char* to;
    from = argv[1];
    to = argv[2];
    unsigned long length = strlen(from);
    unsigned long lengthTo = strlen(to);
    
    // Same length error checking
    if (length != lengthTo){
        fprintf(stderr, "ERROR: from and to do not have the same length\n");
        exit(1);
    }

    // Duplicate byte error checking
    for (unsigned long i = 1; i < length; i++){
        for (unsigned long j = 0; j < i; j++){
            if (from[i] == from[j]){
                fprintf(stderr, "ERROR: from contains duplicate bytes\n");
                exit(1);
            }
        }
    }

    unsigned long loop = 0;
    while (loop == 0){
        int c;
        ssize_t EOFchecker = read(STDIN_FILENO, &c, 1);

        int flag = 0;
        
        if (EOFchecker <= 0){
            break;
        }else{
            for (int i = 0; i < length; i++){
                int convert = from[i];
                if (c == convert){
                    c = to[i];
                    write(STDOUT_FILENO, &c, 1);
                    flag = 1;
                    break;
                }
            }
            if (flag == 0){
                write(STDOUT_FILENO, &c, 1);
            }
        }
    }

    return 0;
    
}
